@import url("typography.css");
@import url("colors.css");
@import url("layout.css");

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

body {
	font-family: var(--font-primary);
	line-height: 1.5;
	color: var(--text-color);
	background-color: var(--background-color);
	min-height: 100vh;
	overflow-y: auto;
}

header {
	background-color: var(--header-bg-color);
	color: var(--header-text-color);
	border-bottom: 1px solid var(--header-border-color);
	padding: 1rem;
	z-index: 1000;
	position: sticky;
	top: 0;
	height: 4rem;
}

header h3 {
	margin: 0;
}

h2,
h3,
h4 {
	margin-bottom: 1.5rem;
}

p {
	margin-bottom: 1rem;
}

ul {
	list-style-position: inside;
	margin-bottom: 15px;
	padding-left: 20px;
}

li {
	margin-bottom: 8px;
}

blockquote {
	border-left: 4px solid var(--blockquote-border-color);
	font-size: 2rem;
	line-height: 1.2;
	padding-left: 2rem;
	margin: 2rem 0;
	color: var(--blockquote-text-color);
	font-style: italic;
}

blockquote p,
blockquote span {
	font-weight: 300;
	transition: font-weight 0.2s ease;
	display: inline-block;
	padding: 0 1px;
}

.highlight {
	background-color: var(--highlight-bg-color);
	padding: 2px 4px;
	border-radius: 3px;
}

.section-name {
	font-weight: 600;
	font-size: 0.87rem;
	color: var(--section-name-color);
	text-transform: uppercase;
	background-color: var(--background-color-alt);
	padding: 0.5rem 0.75rem;
	border-radius: 0.25rem;
}

/* Estilos para o sumário lateral */
.side-content ul {
	padding: 0.5rem;
}

.side-content ul li {
	margin-bottom: 0.5rem;
	list-style-type: none;
}

.side-content ul li a {
	color: var(--text-color);
	text-decoration: none;
}

.side-content ul li a:hover {
	color: var(--link-color);
	text-decoration: underline;
}

button.primary {
	background-color: var(--button-bg-color);
	color: var(--button-text-color);
	border: none;
	font-size: 1rem;
	padding: 0.75rem 1.5rem;
	border-radius: 2rem;
	cursor: pointer;
	font-weight: bold;
	transition: all 0.3s ease;
}

.primary.has-icon {
	padding-left: 1rem;
	display: flex;
	align-items: center;
	gap: 0.5rem;
}

.primary.has-icon p {
	margin: 0;
	line-height: 1;
}

button.secondary {
	background-color: var(--button-secondary-bg-color);
	color: var(--button-secondary-text-color);
	border: 1px solid var(--button-secondary-border-color);
	font-size: 1rem;
	padding: 0.75rem 1.5rem;
	border-radius: 2rem;
	cursor: pointer;
	font-weight: bold;
	transition: all 0.3s ease;
}

button.secondary:hover {
	background-color: var(--button-hover-secondary-bg-color);
	color: var(--button-hover-secondary-text-color);
	border-color: var(--button-secondary-border-color);
}

button.primary:hover {
	background-color: var(--button-hover-bg-color);
}

#hover-button:hover {
	transform: translateY(-2px);
	box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

#back-to-example {
	visibility: hidden;
	transition: all 0.3s ease;
	position: fixed;
	bottom: 5rem;
	opacity: 0;
	left: 50%;
	transform: translateX(-50%) translateY(0);
	transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;
	z-index: 1000;
}

#back-to-example.active {
	visibility: visible;
	opacity: 1;
	transform: translateX(-50%) translateY(-1rem);
}

.input {
	width: 100%;
	display: flex;
	flex-direction: column;
	margin-bottom: 1rem;
}

input[type="text"],
input[type="email"],
input[type="password"],
input[type="number"],
.input-field {
	background-color: var(--background-color);
	border: 1px solid var(--input-border-color);
	color: var(--text-color);
	border-radius: 0.25rem;
	padding: 0.5rem 0.75rem;
	width: 100%;
	font-size: 1rem;
	margin-top: 0.5rem;
}

.input-field:focus {
	outline: none;
	border-color: var(--input-focus-border-color);
	box-shadow: 0 0 0 0.2rem var(--input-focus-box-shadow-color);
}

input[type="checkbox"],
input[type="radio"] {
	width: 1rem;
	height: 1rem;
	margin-right: 0.5rem;
	vertical-align: middle;
}

input[type="checkbox"]:focus,
input[type="radio"]:focus {
	outline: none;
	accent-color: var(--primary-color);
}

.toggle-indicator {
	display: flex;
	align-items: center;
	width: 3.5rem;
	height: 2rem;
	padding: 0.4rem;
	background-color: var(--primary-color-inactive);
	border-radius: 1rem;
	cursor: pointer;
	transition: background-color 0.3s ease;
}

.toggle-indicator.active {
	background-color: var(--button-bg-color);
}

.toggle-indicator.active .toggle-indicator-inner {
	background-color: var(--button-text-color);
	transform: translateX(1.6rem);
}

.toggle-indicator-inner {
	width: 1.25rem;
	height: 1.25rem;
	background-color: var(--button-secondary-text-color);
	border-radius: 50%;
	top: 0.15rem;
	left: 0.15rem;
	transition: transform 0.3s ease;
}

select {
	background-color: var(--background-color);
	border: 1px solid var(--input-border-color);
	color: var(--text-color);
	border-radius: 0.25rem;
	padding: 0.5rem 0.75rem;
	width: 100%;
	font-size: 1rem;
	margin-top: 0.5rem;
}

option {
	background-color: var(--background-color);
	color: var(--text-color);
}

label {
	font-weight: 600;
}

radio-group {
	width: 100%;
	display: flex;
	flex-direction: column;
	gap: 1rem;
	margin-bottom: 0;
}

.loading-spinner {
	border: 6px solid var(--background-color);
	border-top: 6px solid var(--button-bg-color);
	border-radius: 50%;
	width: 2.5rem;
	height: 2.5rem;
	animation: spin 1s cubic-bezier(0.645, 0.045, 0.355, 1) infinite;
	cursor: wait;
	margin-bottom: 0.5rem;
}

@keyframes spin {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}

#moveable-area {
	overflow: hidden;
}

#movable-object {
	position: absolute;
	width: 224px;
	background-color: var(--button-bg-color);
	border: 2px dashed var(--secondary-color);
	color: var(--button-text-color);
	border-radius: 0.5rem;
	display: flex;
	padding: 0.5rem;
	gap: 1rem;
	align-items: center;
	justify-content: center;
	cursor: grab;
	user-select: none;
	transition: background-color 0.3s ease;
}

#movable-object:active {
	cursor: grabbing;
	background-color: var(--secondary-color);
}

.tooltip {
	position: absolute;
	background-color: var(--highlight-bg-color);
	color: var(--highlight-text-color);
	padding: 0.5rem 0.75rem;
	border-radius: 0.25rem;
	font-size: 0.875rem;
	white-space: nowrap;
	z-index: 1000;
	transition: opacity 0.3s ease;
	opacity: 0;
	pointer-events: none;
}

fieldset {
	border: none;
	margin-top: 1rem;
}

.theme-option {
	display: flex;
	align-items: center;
	gap: 0.5rem;
}

#isometric {
	perspective: 1000px;
	width: 400px;
	height: 300px;
	margin: 0 auto;
	background-color: var(--background-color);
	border: 1px solid var(--border-color);
	position: relative;
	transform-style: preserve-3d; /* Essencial para que os filhos (faces) também sejam 3D */
	transition: transform 1s ease-in-out; /* Transição para animação de hover */

	/* COMBINAÇÃO ISOMÉTRICA CLÁSSICA */
	/* RotateX para ver de cima, RotateY para ver um lado */
	/* -30deg no X e 45deg no Y é uma combinação comum para efeito "isométrico" */
	transform: rotateX(-30deg) rotateY(45deg);
}
